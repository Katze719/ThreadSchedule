name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.0)'
        required: true

jobs:
  # Create GitHub release artifacts
  create-artifacts:
    name: Create Release Artifacts
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Get version
      id: get_version
      run: |
        if [ "${{ github.event_name }}" == "release" ]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION="${{ github.event.inputs.version }}"
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Create source archive
      run: |
        tar -czf threadschedule-${{ steps.get_version.outputs.version }}-source.tar.gz \
          --exclude='.git' \
          --exclude='build*' \
          --exclude='.github' \
          --transform "s,^,threadschedule-${{ steps.get_version.outputs.version }}/," \
          include/ cmake/ examples/ tests/ benchmarks/ docs/ \
          CMakeLists.txt conanfile.py README.md LICENSE
    
    - name: Create header-only package
      run: |
        mkdir -p threadschedule-${{ steps.get_version.outputs.version }}-headers
        cp -r include threadschedule-${{ steps.get_version.outputs.version }}-headers/
        cp LICENSE threadschedule-${{ steps.get_version.outputs.version }}-headers/
        cp README.md threadschedule-${{ steps.get_version.outputs.version }}-headers/
        tar -czf threadschedule-${{ steps.get_version.outputs.version }}-headers.tar.gz \
          threadschedule-${{ steps.get_version.outputs.version }}-headers/
    
    - name: Upload artifacts to release
      if: github.event_name == 'release' && github.event.action == 'published'
      uses: softprops/action-gh-release@v2
      with:
        files: |
          threadschedule-${{ steps.get_version.outputs.version }}-source.tar.gz
          threadschedule-${{ steps.get_version.outputs.version }}-headers.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload artifacts as workflow artifacts
      if: github.event_name == 'workflow_dispatch'
      uses: actions/upload-artifact@v4
      with:
        name: release-packages-${{ steps.get_version.outputs.version }}
        path: |
          threadschedule-${{ steps.get_version.outputs.version }}-source.tar.gz
          threadschedule-${{ steps.get_version.outputs.version }}-headers.tar.gz
